«IMPORT api»
«EXTENSION template::api2jsExtension»

«DEFINE main FOR Swagger»
	«FILE "readme.txt"»
		«EXPAND generateReadme FOR contains»
	«ENDFILE»
	«FILE "package.json"»
		«EXPAND generatePackageJson FOR contains»
	«ENDFILE»
	«FILE "server.js"»
		«EXPAND generateServer FOR contains»
	«ENDFILE»
«ENDDEFINE»

«DEFINE generateReadme FOR SpecificationAPI»
Hi! There are some instructions that you should follow to deploy your API.

1- Copy and paste all the created files in a folder
2- Make sure you have Npm and Nodejs installed in your system
3- Run 'npm install' in the root of your project
4- Import the SQL file generated "db.sql" to your DBMS
5- Run 'npm start'
6- Open your browser and go to http://«host»«basePath»
«ENDDEFINE»

«DEFINE generatePackageJson FOR SpecificationAPI»
{
    "name": "«apiName»",
    "version": "1.0.0",
    "main": "server.js",
    "description": "«description»",
    "scripts": {
    	"start": "node server.js"
    },
    "dependencies": {
        "express": "~4.0.0",
        "mongoose": "~3.6.13",
        "mysql": "~2.12.0",
        "body-parser": "~1.0.1"
    }
}
«ENDDEFINE»

«DEFINE generateServer FOR SpecificationAPI»
// call the packages we need
var express    = require('express');        // call express
var app        = express();                 // define our app using express
var bodyParser = require('body-parser');
var mysql = require('mysql');

var connection = mysql.createConnection({
   host     : '«bdserver»',
   user     : '«bduser»',
   password : '«bdpass»',
   database : '«bdname»'
 });

connection.connect(function(err){
 if(!err) {
     console.log("Database is connected ... \n\n");  
 } else {
     console.error("Error connecting database ... \n\n" + err);  
 }
 });

// configure app to use bodyParser()
// this will let us get the data from a POST
app.use(bodyParser.urlencoded({ extended: true }));
app.use(bodyParser.json());

var port = process.env.PORT || 8080;        // set our port

// ROUTES FOR OUR API
// =============================================================================
var router = express.Router();              // get an instance of the express Router

// test route to make sure everything is working (accessed at GET http://localhost:8080/api)

router.get('/', function(res, req){
	res.render('Welcome to your «apiName» backend!')
});

«EXPAND generateOperations FOREACH contains»

// REGISTER OUR ROUTES -------------------------------
// all of our routes will be prefixed with /api
app.use('/api', router);

// START THE SERVER
// =============================================================================
app.listen(port);
console.log('Magic happens on port ' + port);
«ENDDEFINE»

«DEFINE generateOperations FOR Operation»
router.«getKindOfOp(this)»«EXPAND functionHeader FOR this »{
	«EXPAND generateDBQuery(this) FOREACH responses»
});
«ENDDEFINE»

«DEFINE functionHeader FOR Operation»
('«path»«FOREACH parameters AS parameter SEPARATOR "/"»«IF parameter.compulsory»:«parameter.name»«ELSE»«ENDIF»«ENDFOREACH»', function(req, res, next)
«ENDDEFINE»

«DEFINE generateDBQuery(Operation operation) FOR Response»
	«IF getKindOfOp(operation) == 'get'»
		«FOREACH contains.compose AS class»
					connection.query("SELECT «FOREACH class.compose AS atribute SEPARATOR ","»«atribute.name»«ENDFOREACH» FROM «class.name»", function(err, result){
						// Logic goes here
						
						res.render('res', {res: result});
					});
		«ENDFOREACH»
	«ELSEIF getKindOfOp(operation) == 'post'»
		«FOREACH contains.compose AS class»
					connection.query("INSERT INTO «contains.compose.name.get(0)» («FOREACH class.compose AS atribute SEPARATOR ","»«atribute.name»«ENDFOREACH») VALUES (value1, value2...)", function(err, result){
						// Logic goes here
						
						if (err) {
							console.log(err);
						} else { 
            				res.send('Item added to database with ID: ' + result.insertId);
        				}
					});
		«ENDFOREACH»
	«ENDIF»
«ENDDEFINE»

